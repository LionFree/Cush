//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cush.Testing {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Cush.Testing.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In the specified range, the minimum is greater than maximum..
        /// </summary>
        public static string ArgumentMinValueGreaterThanMaxValue {
            get {
                return ResourceManager.GetString("ArgumentMinValueGreaterThanMaxValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value must be positive..
        /// </summary>
        public static string ArgumentMustBePositive {
            get {
                return ResourceManager.GetString("ArgumentMustBePositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timing {0} (ms): {1}.
        /// </summary>
        public static string Benchmark_Result {
            get {
                return ResourceManager.GetString("Benchmark_Result", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using {0}, the normalized mean time of {1} iterations was {2} ms (delta = {3}%)..
        /// </summary>
        public static string Benchmark_Results {
            get {
                return ResourceManager.GetString("Benchmark_Results", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting elapsed span while CPUWatch is running is not implemented..
        /// </summary>
        public static string ERROR_Benchmark_CpuWatch_Elapsed {
            get {
                return ResourceManager.GetString("ERROR_Benchmark_CpuWatch_Elapsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your hardware doesn&apos;t support high resolution counters..
        /// </summary>
        public static string ERROR_Benchmark_NoHiResCounter {
            get {
                return ResourceManager.GetString("ERROR_Benchmark_NoHiResCounter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No timings passed, cannot generate percent change..
        /// </summary>
        public static string ERROR_NoTimingsPassed {
            get {
                return ResourceManager.GetString("ERROR_NoTimingsPassed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ready!.
        /// </summary>
        public static string INFO_Ready {
            get {
                return ResourceManager.GetString("INFO_Ready", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timing {0}: {1} ticks | {2} ms.
        /// </summary>
        public static string INFO_Timing {
            get {
                return ResourceManager.GetString("INFO_Timing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warming up...  .
        /// </summary>
        public static string INFO_WarmingUp {
            get {
                return ResourceManager.GetString("INFO_WarmingUp", resourceCulture);
            }
        }
    }
}
