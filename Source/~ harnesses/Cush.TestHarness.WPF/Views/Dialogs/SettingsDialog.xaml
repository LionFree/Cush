<controls:ContentDialog x:Class="Cush.TestHarness.WPF.Views.Dialogs.SettingsDialog"
                      x:ClassModifier="internal"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:sys="clr-namespace:System;assembly=mscorlib"
                      xmlns:helpers="clr-namespace:Cush.WPF.Styles.Helpers;assembly=Cush.WPF.Controls"
                      xmlns:themes="clr-namespace:Cush.WPF.ColorSchemes;assembly=Cush.WPF.Controls"
                      xmlns:controls="clr-namespace:Cush.WPF.Controls;assembly=Cush.WPF.Controls"
                      xmlns:resources="clr-namespace:Cush.TestHarness.WPF.Views.Resources"
                      xmlns:viewModels="clr-namespace:Cush.TestHarness.WPF.ViewModels"
                      xmlns:colorSchemes="clr-namespace:Cush.WPF.ColorSchemes;assembly=Cush.WPF.Controls"

                      Foreground="{DynamicResource BlackBrush}"
                      Background="{DynamicResource WhiteBrush}"
                      mc:Ignorable="d" d:DataContext="{d:DesignInstance viewModels:MockSettingsViewModel, IsDesignTimeCreatable=True}">
    <controls:ContentDialog.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Cush.WPF.Styles;component/Styles.xaml" />
                <!--<ResourceDictionary Source="../Resources/Icons.xaml" />-->
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate x:Key="ThemeComboItemTemplate" DataType="{x:Type colorSchemes:ThemeMenuData}">
                <StackPanel Orientation="Horizontal">
                    <Ellipse Width="16" Height="16" StrokeThickness="1"
                             Stroke="{Binding BorderColorBrush, Mode=OneWay}" Fill="{Binding ColorBrush, Mode=OneWay}" />
                    <TextBlock Text="{Binding Name, Mode=OneWay}"
                               Foreground="{DynamicResource BlackBrush}"
                               Margin="5 3" />
                </StackPanel>
            </DataTemplate>

            <x:Array x:Key="FontSizes" Type="sys:Double">
                <sys:Double>7.0</sys:Double>
                <sys:Double>7.5</sys:Double>
                <sys:Double>8.0</sys:Double>
                <sys:Double>8.5</sys:Double>
                <sys:Double>9.0</sys:Double>
                <sys:Double>9.5</sys:Double>
                <sys:Double>10.0</sys:Double>
                <sys:Double>10.5</sys:Double>
                <sys:Double>11.0</sys:Double>
                <sys:Double>11.5</sys:Double>
                <sys:Double>12.0</sys:Double>
                <sys:Double>12.5</sys:Double>
                <sys:Double>13.0</sys:Double>
                <sys:Double>13.5</sys:Double>
                <sys:Double>14.0</sys:Double>
                <sys:Double>15.0</sys:Double>
                <sys:Double>16.0</sys:Double>
                <sys:Double>17.0</sys:Double>
                <sys:Double>18.0</sys:Double>
                <sys:Double>19.0</sys:Double>
                <sys:Double>20.0</sys:Double>
                <sys:Double>22.0</sys:Double>
                <sys:Double>24.0</sys:Double>
                <sys:Double>26.0</sys:Double>
                <sys:Double>28.0</sys:Double>
                <sys:Double>30.0</sys:Double>
                <sys:Double>32.0</sys:Double>
                <sys:Double>34.0</sys:Double>
                <sys:Double>36.0</sys:Double>
                <sys:Double>38.0</sys:Double>
                <sys:Double>40.0</sys:Double>
            </x:Array>

            <DataTemplate DataType="{x:Type FamilyTypeface}">
                <WrapPanel>
                    <TextBlock Text="{Binding Path=Style}" />
                    <TextBlock Text=" " />
                    <TextBlock Text="{Binding Path=Weight}" />
                    <TextBlock Text=" " />
                    <TextBlock Text="{Binding Path=Stretch}" />
                </WrapPanel>
            </DataTemplate>

        </ResourceDictionary>
    </controls:ContentDialog.Resources>


    <Grid IsSharedSizeScope="True" Background="{DynamicResource WhiteBrush}"
          Height="480" Width="500">
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" SharedSizeGroup="Buttons" />
            <ColumnDefinition Width="Auto" SharedSizeGroup="Buttons" />
            <ColumnDefinition Width="Auto" SharedSizeGroup="Buttons" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="231*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <TabControl VerticalAlignment="Stretch" Grid.ColumnSpan="4" TabStripPlacement="Top">

            <TabItem Header="{x:Static resources:Strings.HEADER_General}" Selector.IsSelected="True">

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="198*" />
                        <ColumnDefinition Width="198*" />
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Row="0"
                                HorizontalAlignment="Center" VerticalAlignment="Center" Margin="6">
                        <CheckBox Content="{x:Static resources:Strings.TEXT_ShowSplashScreen}"
                                  IsChecked="{Binding Path=SplashOk,Mode=TwoWay}"
                                  Click="SettingChanged"
                                  Height="Auto" Margin="3" />

                        <CheckBox Content="{x:Static resources:Strings.TEXT_ShowTooltips}"
                                  IsChecked="{Binding Path=ShowTooltips,Mode=TwoWay}"
                                  Click="SettingChanged"
                                  Height="Auto" Margin="3" />

                        <CheckBox Content="{x:Static resources:Strings.TEXT_SimilarActivity}"
                                  IsChecked="{Binding Path=SimilarActivityHandling, Mode=TwoWay}"
                                  Click="SettingChanged"
                                  Height="Auto" Margin="3" />

                    </StackPanel>

                    <CheckBox Content="{x:Static resources:Strings.TEXT_DebugMode}" Grid.Row="0" Grid.Column="1"
                              Click="SettingChanged"
                              HorizontalAlignment="Center" VerticalAlignment="Center" Margin="6" />
                    <!--IsChecked="{Binding Path=Default.Debug_Mode,Mode=TwoWay}"-->

                    <GroupBox Grid.Row="1" Grid.ColumnSpan="2" Grid.Column="0"
                              Header="{x:Static resources:Strings.TEXT_Theme}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <ComboBox Grid.Column="0" Margin="10 3"
                                      ItemsSource="{Binding Themes, Mode=OneWay}"
                                      ItemTemplate="{StaticResource ThemeComboItemTemplate}"
                                      SelectedValue="{Binding SelectedTheme, Mode=TwoWay}"
                                      SelectionChanged="ThemeChanged" />
                            <ComboBox Grid.Column="1" Margin="10 3"
                                      ItemsSource="{Binding Accents, Mode=OneWay}"
                                      ItemTemplate="{StaticResource ThemeComboItemTemplate}"
                                      SelectedValue="{Binding SelectedAccent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}"
                                      SelectionChanged="AccentChanged" />
                        </Grid>
                    </GroupBox>
                </Grid>
            </TabItem>

            <TabItem Header="{x:Static resources:Strings.TEXT_Fonts}">

                <GroupBox Header="{x:Static resources:Strings.TEXT_Font}"
                          VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch">

                    <Grid Margin="12">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="2*" />
                        </Grid.RowDefinitions>

                        <!-- Row 0: Selection controls -->
                        <Grid Grid.Column="0" Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="10*" />
                                <ColumnDefinition Width="12" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="12" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!-- Families -->
                            <Label Grid.Column="0" Grid.Row="0"
                                   Content="{x:Static resources:Strings.HEADER_FontFamily}" />
                            <ComboBox x:Name="FontCombo"
                                      Grid.Column="0" Grid.Row="1" Grid.RowSpan="2" Margin="3"
                                      SelectedItem="{Binding SelectedFontFamily}"
                                      SelectionChanged="SettingChanged"
                                      ItemTemplate="{DynamicResource FontTemplate}">
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                                <ComboBox.ItemsSource>
                                    <Binding Source="{StaticResource FontFamilies}" />
                                </ComboBox.ItemsSource>
                                <ComboBox.Resources>

                                    <DataTemplate x:Key="FontTemplate" DataType="{x:Type FontFamily}">
                                        <TextBlock FontFamily="{Binding Source}"
                                                   Text="{Binding Source}"
                                                   ToolTip="{Binding Source}"
                                                   FontSize="20" MinWidth="400" 
                                                   Foreground="{DynamicResource BlackBrush}"/>
                                    </DataTemplate>

                                </ComboBox.Resources>
                            </ComboBox>

                            <!-- Font sizes -->
                            <Label Grid.Column="2" Grid.Row="0" Content="{x:Static resources:Strings.HEADER_Size}" />
                            <ComboBox Grid.Column="2" Grid.Row="1" Grid.RowSpan="2" FontSize="16" Margin="3"
                                      ItemsSource="{StaticResource FontSizes}"
                                      SelectedItem="{Binding SelectedFontSizeInPoints}"
                                      SelectionChanged="SettingChanged">
                                <ComboBox.ItemContainerStyle>
                                    <Style>
                                        <Setter Property="TextBlock.Foreground" Value="{DynamicResource BlackBrush}" />
                                    </Style>
                                </ComboBox.ItemContainerStyle>
                            </ComboBox>


                            <!-- Family Typefaces (weight, style, stretch) -->
                            <CheckBox Grid.Row="1" Grid.Column="4" Content="{x:Static resources:Strings.TEXT_Bold}"
                                      FontSize="16" IsChecked="{Binding IsBoldChecked}" Margin="3"
                                      Click="SettingChanged" />
                            <CheckBox Grid.Row="2" Grid.Column="4" Content="{x:Static resources:Strings.TEXT_Italic}"
                                      FontSize="16" IsChecked="{Binding IsItalicChecked}" Margin="3"
                                      Click="SettingChanged" />

                        </Grid>

                        <!-- Row 2: Preview text -->
                        <DockPanel Grid.Column="0" Grid.Row="1">
                            <TextBlock DockPanel.Dock="Top" Text="{x:Static resources:Strings.HEADER_Preview}" />
                            <TextBox AcceptsReturn="True"
                                     TextAlignment="Center"
                                     TextWrapping="Wrap"
                                     VerticalScrollBarVisibility="Auto"
                                     IsReadOnly="True"
                                     Padding="5 10"

                                     FontSize="{Binding SelectedFontSizeInPixels}"
                                     FontFamily="{Binding SelectedFontFamily}"
                                     FontStyle="{Binding SelectedFontStyle}"
                                     FontWeight="{Binding SelectedFontWeight}"

                                     Text="{x:Static resources:Strings.TEXT_Preview}" />
                        </DockPanel>
                    </Grid>
                </GroupBox>
            </TabItem>
            <TabItem Header="{x:Static resources:Strings.HEADER_Privacy}">

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="9*" MinHeight="85" />
                        <RowDefinition Height="15*" MinHeight="100" />
                    </Grid.RowDefinitions>

                    <GroupBox Header="{x:Static resources:Strings.TEXT_RecentFiles}" Margin="6"
                              HorizontalAlignment="Stretch" VerticalAlignment="Bottom">
                        <StackPanel Orientation="Vertical">
                            <CheckBox Margin="6"
                                      IsChecked="{Binding IsKeepRecentFileListChecked}"
                                      Click="SettingChanged"
                                      Content="{x:Static resources:Strings.TEXT_ShowRecentFiles}" />

                            <Button Command="{Binding ClearFilesCommand}"
                                    Content="{x:Static resources:Strings.BUTTON_ClearFilesNow}" />
                        </StackPanel>
                    </GroupBox>

                    <GroupBox Header="{x:Static resources:Strings.TEXT_EditorPasswordProtection}"
                              HorizontalAlignment="Stretch" VerticalAlignment="Top"
                              Margin="6" 
                              Grid.Row="1">
                        <StackPanel Orientation="Horizontal">
                            <CheckBox x:Name="PasswordLocked" IsThreeState="False"
                                      HorizontalAlignment="Center" VerticalAlignment="Center" Margin="6"
                                      Click="PasswordLocked_OnClick"
                                      Content="{x:Static resources:Strings.TEXT_EnablePasswordProtection}" />

                            <StackPanel Orientation="Vertical"
                                        HorizontalAlignment="Right">

                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="5"
                                            IsEnabled="{Binding ElementName=PasswordLocked, Path=IsChecked}">

                                    <Label Content="{x:Static resources:Strings.HEADER_LoginPassword}" />

                                    <PasswordBox x:Name="PasswordBox" Width="125"
                                                 PasswordChanged="PasswordChanged"
                                                 KeyDown="SettingChanged"

                                                 helpers:TextboxHelper.Watermark="Enter Password"
                                                 helpers:TextboxHelper.ClearTextButton="True" />
                                </StackPanel>

                                <StackPanel Orientation="Horizontal" Margin="5"
                                            IsEnabled="{Binding ElementName=PasswordLocked, Path=IsChecked}">

                                    <Label Content="{x:Static resources:Strings.HEADER_ConfirmPassword}" />
                                    <PasswordBox x:Name="ConfirmBox" Width="125"
                                                 PasswordChanged="SettingChanged"
                                                 helpers:TextboxHelper.Watermark="Confirm Password"
                                                 helpers:TextboxHelper.ClearTextButton="True"
                                                 controls:PasswordValidator.ValidateAgainst="{Binding ElementName=PasswordBox}" />
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </TabItem>

        </TabControl>

        <Button Content="{x:Static resources:Strings.BUTTON_OK}"
                Command="{Binding ApplyCommand}"
                CommandParameter="{Binding ElementName=PasswordBox}"
                Margin="3 5" Padding="10 3" Grid.Row="1"
                Grid.Column="1" Click="OnOkClick" IsDefault="True" />

        <Button Content="{x:Static resources:Strings.BUTTON_Cancel}"
                Margin="3 5" Padding="10 3" Grid.Row="1"
                Grid.Column="2" Click="OnCancelClick" IsCancel="True" />

        <Button Content="{x:Static resources:Strings.BUTTON_Apply}" Name="Apply"
                Margin="3 5" Padding="10 3" Grid.Row="1"
                Command="{Binding ApplyCommand}"
                CommandParameter="{Binding ElementName=PasswordBox}"
                Grid.Column="3" Click="OnApplyClick" IsEnabled="False" x:FieldModifier="private" />
    </Grid>


</controls:ContentDialog>