<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:helpers="clr-namespace:Cush.WPF.Controls.Helpers"
                    xmlns:controls="clr-namespace:Cush.WPF.Controls">

    <system:Double x:Key="UpperCaseContentFontSize">10.0</system:Double>

    <Style TargetType="{x:Type ToggleButton}" x:Key="CushToggleButtonStyle">
        <Setter Property="helpers:ControlsHelper.CornerRadius" Value="3" />
        <Setter Property="Background" Value="{DynamicResource GrayBrush10}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}" />
        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Padding" Value="5,6" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>

                        <!--BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"-->
                        <Border x:Name="Background"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ControlsHelper.CornerRadius), Mode=OneWay}" />

                        <Border x:Name="Border"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{x:Null}"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ControlsHelper.CornerRadius), Mode=OneWay}" />

                        <Border x:Name="DisabledVisualElement"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Background="{DynamicResource ControlsDisabledBrush}"
                                IsHitTestVisible="False"
                                Opacity="0"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ControlsHelper.CornerRadius), Mode=OneWay}" />

                        <controls:ContentControlEx x:Name="contentPresenter"
                                                   Content="{TemplateBinding Content}"
                                                   ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                   ContentTemplate="{TemplateBinding ContentTemplate}"
                                                   ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   Padding="{TemplateBinding Padding}"
                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   RecognizesAccessKey="True"
                                                   ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ControlsHelper.ContentCharacterCasing)}" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="BorderThickness"
                                    Value="2" />
                            <Setter TargetName="Background"
                                    Property="Background"
                                    Value="{DynamicResource GrayBrush2}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{DynamicResource GrayBrush5}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                                <Condition Property="IsChecked"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Background"
                                    Property="Background"
                                    Value="{DynamicResource GrayBrush8}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                                <Condition Property="IsChecked"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Background"
                                    Property="Background"
                                    Value="{DynamicResource GrayBrush3}" />
                        </MultiTrigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="Background"
                                    Property="Background"
                                    Value="{DynamicResource GrayBrush7}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="BorderThickness"
                                    Value="2" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{DynamicResource ButtonMouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="DisabledVisualElement"
                                    Property="Opacity"
                                    Value="0.7" />
                            <Setter TargetName="contentPresenter"
                                    Property="Opacity"
                                    Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
    